{"version":3,"sources":["components/Copyright.js","components/PreviewPost.js","service/PostsService.js","components/Home.js","components/Read.js","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","Link","href","target","GitHub","fontSize","Date","getFullYear","useStyles","makeStyles","card","display","cardDetails","flex","cardMedia","width","PreviewPost","post","classes","CardActionArea","Card","className","CardContent","component","title","date","paragraph","description","CardMedia","image","imageTitle","featuredPosts","id","imageText","link","textDecoration","Home","posts","PostsService","map","Grid","item","xs","key","to","replace","Container","maxWidth","gutterBottom","DeveloperMode","Box","my","container","spacing","Read","match","slug","params","find","disqusConfig","url","identifier","Button","startIcon","DiscussionEmbed","shortname","config","theme","root","flexDirection","minHeight","main","marginTop","marginBottom","footer","padding","backgroundColor","palette","type","grey","App","console","log","window","location","BottomNavigation","BottomNavigationAction","label","value","icon","Code","CssBaseline","path","exact","Favorite","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d7c5538a.chunk.js","sourcesContent":["import React from 'react';\nimport { Typography, Link } from '@material-ui/core'\nimport { GitHub } from '@material-ui/icons'\n\nexport default function Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\">\n            {\"Copyright Â© \"}\n            <Link color=\"inherit\" href=\"https://github.com/bahyusanciko\" target=\"_blank\"> Bahyu Sanciko < GitHub fontSize=\"small\"/></Link> \n            {new Date().getFullYear()} {\".\"}\n        </Typography>\n    );\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Card, CardActionArea, CardContent, CardMedia } from '@material-ui/core/';\n\nconst useStyles = makeStyles({\n    card: {\n        display: 'flex',\n    },\n    cardDetails: {\n        flex: 1,\n    },\n    cardMedia: {\n        width: 160,\n    },\n});\n\nexport default function PreviewPost({ post }) {\n    const classes = useStyles();\n\n    return (\n        <CardActionArea>\n            <Card className={classes.card}>\n                <div className={classes.cardDetails}>\n                    <CardContent>\n                        <Typography component=\"h2\" variant=\"h5\">\n                            {post.title}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                            {post.date}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" paragraph>\n                            {post.description}\n                        </Typography>\n                    </CardContent>\n                </div>\n                <CardMedia className={classes.cardMedia} image={post.image} title={post.imageTitle} />\n            </Card>\n        </CardActionArea>\n    )\n}","const featuredPosts = [\n    {\n        id: 1,\n        title: \"Featured post\",\n        date: \"Nov 12\",\n        description: \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n        image: \"https://www.nicepng.com/png/detail/891-8917805_create-adaptive-icons-for-ionic-cordova-applications-ionic.png\",\n        imageText: \"asdsad Text\"\n    },\n    {\n        id: 2,\n        title: \"Post title\",\n        date: \"Nov 11\",\n        description: \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1280px-React-icon.svg.png\",\n        imageText: \"asdas Text\"\n    }\n];\n\nexport default featuredPosts","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Container, Grid, Box } from \"@material-ui/core/\";\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DeveloperMode } from \"@material-ui/icons\";\nimport PreviewPost from \"./PreviewPost\";\nimport PostsService from '../service/PostsService'\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        textDecoration: 'none'\n    }\n}))\n\nexport default function Home() {\n    const classes = useStyles()\n\n    const posts = PostsService.map(post => {\n        return (\n            <Grid item xs={12} key={post.id}>\n                <Link to={\"blog/read/\" + post.title.replace(' ', '-')} className={classes.link}>\n                    <PreviewPost post={post} />\n                </Link>\n            </Grid>\n        )\n    })\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <Typography variant=\"h3\" component=\"h1\" gutterBottom>Bahyu Sanciko</Typography>\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                Hello Semua, Blog ini hanya berisikan bacotan saya tentang dunia IT sekian. #santuyprogramming <DeveloperMode />\n            </Typography>\n            <Typography variant=\"h6\">Tulisan Terbaru</Typography>\n            <Box my={3}>\n                <Grid container spacing={4}>\n                    {posts}\n                </Grid>\n            </Box>\n        </Container>\n    );\n}","import React from 'react';\nimport PostsService from '../service/PostsService';\nimport { Link } from 'react-router-dom';\nimport { Typography, Container } from \"@material-ui/core/\";\nimport { makeStyles } from '@material-ui/core/styles'\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport Button from '@material-ui/core/Button';\nimport Disqus from \"disqus-react\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n      textDecoration: 'none'\n  }\n}))\nexport default function Read({ match }) {\n  const classes = useStyles()\n\n  const slug = match.params.slug.replace('-', ' ')\n  const post = PostsService.find(post => post.title == slug)\n\n  const disqusShortname = \"bahyusanciko-1\";\n  const disqusConfig = {\n    url: match.url,\n    identifier: 'PAGE_IDENTIFIER',\n    title: post.title\n  };\n\n  return (\n  <Container component=\"main\" maxWidth=\"sm\">\n  <Link to=\"/blog\" className={classes.link}> \n  <Button \n      \n        variant=\"contained\"\n        color=\"default\"\n        startIcon={<KeyboardBackspaceIcon />}\n  >\n        Kembali\n      </Button>\n  </Link>\n  <Typography variant=\"h3\" component=\"h1\" gutterBottom>{post.title}</Typography>\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n            </Typography>\n  <Typography variant=\"body1\">{post.description}</Typography>\n  <div className=\"container\">\n        <Disqus.DiscussionEmbed\n          shortname={disqusShortname}\n          config={disqusConfig}\n        />\n      </div>\n  </Container>\n  );\n\n}","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { Redirect } from 'react-router'\nimport { CssBaseline, Typography, Container, BottomNavigationAction, BottomNavigation } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Favorite, Code } from \"@material-ui/icons\";\nimport Copyright from './components/Copyright'\nimport Home from './components/Home'\nimport Read from './components/Read'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\"\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2)\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor: theme.palette.type === \"light\" ?\n      theme.palette.grey[200] : theme.palette.grey[800]\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  console.log(window.location.href);     //yields: \"https://stacksnippets.net/js\"\n  return (\n    \n    <BrowserRouter>\n      <div className={classes.root}>\n        <Link to=\"/blog\"> \n        <BottomNavigation>\n          <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<Code />} />\n        </BottomNavigation>\n        \n        </Link>\n        <CssBaseline />\n        <main className={classes.main}>\n          <Switch>\n            <Route path=\"/blog\" exact component={Home} />\n            <Route exact path='/blog/read/:slug' component={Read} />\n          </Switch>\n        </main>\n\n        <footer className={classes.footer}>\n          <Container maxWidth=\"sm\">\n            <Typography variant=\"body1\">\n              Built with < Favorite fontSize=\"small\" />\n            </Typography>\n            <Copyright />\n          </Container>\n        </footer>\n      </div>\n    </BrowserRouter>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}