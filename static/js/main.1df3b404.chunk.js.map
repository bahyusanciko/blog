{"version":3,"sources":["Blog.js","Card.js","App.js","serviceWorker.js","index.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Blog","React","useState","open","setOpen","handleClose","Button","Dialog","aria-labelledby","id","dividers","gutterBottom","autoFocus","useStyles","makeStyles","card","display","cardDetails","flex","cardMedia","width","FeaturedPost","post","Grid","item","xs","md","to","CardActionArea","component","href","Card","CardContent","title","date","paragraph","description","CardMedia","image","imageTitle","exact","path","Copyright","Link","target","GitHub","fontSize","s","Date","getFullYear","flexDirection","minHeight","main","marginTop","marginBottom","footer","backgroundColor","type","StickyFooter","BottomNavigation","BottomNavigationAction","label","value","icon","Code","CssBaseline","Container","maxWidth","DeveloperMode","container","imageText","map","key","Favorite","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1df3b404.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Blog() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Modal title\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </Typography>\n          <Typography gutterBottom>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\n          </Typography>\n          <Typography gutterBottom>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n            auctor fringilla.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Blog from \"./Blog\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n});\n\nexport default function FeaturedPost(props) {\n  const classes = useStyles();\n  const { post } = props;\n\n  return (\n<Router>\n    <Grid item xs={12} md={12}>\n      <Link to={'/post/'+post.id}> \n      <CardActionArea component=\"a\" href=\"#\">\n        <Card className={classes.card}>\n          <div className={classes.cardDetails}>\n            <CardContent>\n                \n              <Typography component=\"h2\" variant=\"h5\">\n                {post.title}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {post.date}\n              </Typography>\n              <Typography variant=\"subtitle1\" paragraph>\n                {post.description}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"primary\">\n             \n              </Typography>\n            </CardContent>\n          </div>\n          <CardMedia className={classes.cardMedia} image={post.image} title={post.imageTitle} />\n        </Card>\n      </CardActionArea>\n      </Link>\n    </Grid>\n   <Switch>\n   <Route exact path='/post/:post_slug' component={Blog} />\n  </Switch>\n</Router>\n  );\n  \n}\n\nFeaturedPost.propTypes = {\n  post: PropTypes.object,\n};","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  makeStyles\n} from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Links from \"@material-ui/core/Link\";\nimport {\n  Favorite,\n  GitHub,\n  Code,\n  DeveloperMode\n} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport Card from \"./Card\";\n\n\n\nfunction Copyright() {\n  return ( <Typography variant = \"body2\"\n      color = \"textSecondary\"> {\n        \"Copyright © \"\n      } <Links color = \"inherit\"\n      href = \"https://github.com/bahyusanciko\"\n      target = \"_blank\">\n      Bahyu Sanciko < GitHub fontSize = \"small\"\n      s/>\n      </Links>{\" \"} {\n      new Date().getFullYear()\n    } {\n      \".\"\n    } </Typography>\n);\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\"\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2)\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor: theme.palette.type === \"light\" ?\n      theme.palette.grey[200] : theme.palette.grey[800]\n  },\n  card: {\n    display: \"flex\"\n  },\n  cardDetails: {\n    flex: 1\n  },\n  cardMedia: {\n    width: 160\n  }\n}));\n\nexport default function StickyFooter() {\n  const classes = useStyles();\n\n  const featuredPosts = [{\n      id : 1,\n      title: \"Featured post\",\n      date: \"Nov 12\",\n      description: \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n      image: \"https://ionicframework.com/docs/v3/img/meta/ionic-framework-og.png\",\n      imageText: \"asdsad Text\"\n    },\n    {\n      id : 2,\n      title: \"Post title\",\n      date: \"Nov 11\",\n      description: \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n      image: \"https://ionicframework.com/docs/v3/img/meta/ionic-framework-og.png\",\n      imageText: \"asdas Text\"\n    }\n  ];\n\n  return ( <div className = {classes.root}>\n    <BottomNavigation>\n    <BottomNavigationAction label = \"Favorites\"\n    value = \"favorites\"\n    icon = {<Code/>}/> \n    </BottomNavigation> \n    <CssBaseline/>\n    <Container component = \"main\" className = {classes.main} maxWidth = \"sm\">\n    <Typography variant = \"h3\" component = \"h1\" gutterBottom>\n    Bahyu Sanciko </Typography> <Typography variant = \"h5\" component = \"h2\"\n    gutterBottom> {  \"Hello Semua,\"} \n    { \"Blog ini hanya berisikan bacotan saya tentang dunia IT sekian. #santuyprogramming \"} \n    <DeveloperMode/>\n    </Typography> <Typography variant = \"h6\">\n    Tulisan Terbaru < br/>\n    </Typography> <Grid container spacing = {4}> {\n      featuredPosts.map(post => ( < Card key = {\n         post.title\n        }\n        post = {\n          post\n        }\n      />\n      ))\n    } </Grid> \n    </Container>\n\n    <footer className = {classes.footer}>\n    <Container maxWidth = \"sm\">\n    <Typography variant = \"body1\">\n    Built with < Favorite fontSize = \"small\"/>\n    </Typography> <Copyright/>\n    </Container> \n    </footer> \n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}